[33m26f3298[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mdevelop[m[33m, [m[1;31morigin/develop[m[33m)[m mostly done now
[33me46cdbe[m Enhance teacher management functionality: Added 'class_teacher_level' field to the Teacher model and updated the TeacherAdmin interface to include this field. Improved frontend components to handle class teacher assignments, including dynamic fetching of levels, grades, and classrooms. Enhanced form validation and error handling for a better user experience when assigning classrooms to teachers.
[33m758c359[m Enhance teacher management and classroom functionalities: Updated the LevelSerializer to include a shift display field, modified the TeacherAdmin to streamline education and experience information, and added class teacher fields in the frontend components. Improved classroom management by integrating level selection and ensuring proper data handling for grades and sections. This update enhances user experience and data integrity across the application.
[33md52b4d6[m Remove 'Evening' shift option from various models and migrations across the application to streamline shift management. Updated related frontend components and error messages to reflect this change, ensuring consistency in shift selection and user experience.
[33m98e0d1e[m Enhance backend settings and models: Added email configuration settings to the backend, including SMTP details for email notifications. Updated the Grade model to include a mapping for 'Special Class'. Enhanced the CoordinatorViewSet to calculate class counts based on coordinator level and campus, and introduced subject distribution for teachers. Implemented a GlobalCounter model for managing system-wide unique identifiers for students and employees. Refactored user creation service to send email notifications upon user creation. Updated student management to remove deprecated fields and streamline data handling.
[33m63848c9[m Remove obsolete files and scripts: Deleted the database file (db.sqlite3), the teacher import script (import_campus6_teachers_new.py), and the simple CSV import script (simple_csv_import.py) to streamline the backend structure and eliminate unnecessary code. This cleanup enhances maintainability and focuses on essential functionalities.
[33m0bf0a89[m Enhance dashboard and teacher management functionalities: Implemented cache clearing on page load to resolve student data issues, disabled auto-refresh to prevent outdated data display, and added edit functionality for teacher management with a dialog interface. Improved form handling and validation for teacher data submission, ensuring a more robust user experience.
[33ma41c4e1[m Remove unused backend scripts: Deleted campus.py, check_data.py, create_c.py, teachers.py, test_google_sheet.py, and other related files to streamline the project structure and improve maintainability. This cleanup eliminates obsolete code that is no longer necessary for the current application functionality.
[33m3da97f3[m Refactor campus and attendance management: Updated campus import functionality to utilize urllib for data fetching, added a new attendance list API for dashboard integration, and enhanced attendance models with new fields for better tracking. Updated requirements to include necessary libraries and improved frontend components for a more cohesive user experience.
[33m39e37f7[m Refactor transfer management and enhance related components: Removed the terminal rule file, updated the attendance view to filter classrooms by grade level, added transfers app to installed apps, and integrated transfer management routes in the backend. Enhanced the admin sidebar with transfer management links and implemented new transfer request APIs for better handling of student and teacher transfers.
