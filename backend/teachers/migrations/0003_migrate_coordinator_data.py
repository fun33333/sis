# Generated by Django 5.2.7 on 2025-10-10 09:23

from django.db import migrations


def migrate_coordinators(apps, schema_editor):
    """Migrate existing assigned_coordinator to assigned_coordinators ManyToMany field"""
    Teacher = apps.get_model('teachers', 'Teacher')
    
    migrated_count = 0
    for teacher in Teacher.objects.all():
        if teacher.assigned_coordinator:
            teacher.assigned_coordinators.add(teacher.assigned_coordinator)
            migrated_count += 1
            print(f"Migrated coordinator {teacher.assigned_coordinator.full_name} for teacher {teacher.full_name}")
    
    print(f"Migrated {migrated_count} teachers to ManyToMany coordinators")


def reverse_migrate_coordinators(apps, schema_editor):
    """Reverse migration - set assigned_coordinator from first assigned_coordinators"""
    Teacher = apps.get_model('teachers', 'Teacher')
    
    for teacher in Teacher.objects.all():
        coordinators = teacher.assigned_coordinators.all()
        if coordinators.exists():
            # Set the first coordinator as the single assigned_coordinator
            teacher.assigned_coordinator = coordinators.first()
            teacher.save(update_fields=['assigned_coordinator'])


class Migration(migrations.Migration):

    dependencies = [
        ('teachers', '0002_add_assigned_coordinators_manytomany'),
    ]

    operations = [
        migrations.RunPython(migrate_coordinators, reverse_migrate_coordinators),
    ]
