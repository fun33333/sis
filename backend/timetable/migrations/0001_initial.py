# Generated by Django 5.2.7 on 2025-10-13 05:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0002_initial'),
        ('teachers', '0003_migrate_coordinator_data'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Period 1', 'Break', 'Lunch'", max_length=100)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('is_break', models.BooleanField(default=False, help_text='Mark as break period')),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.CharField(default='2024-25', max_length=20)),
                ('term', models.CharField(default='Term 1', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_timeslots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Time Slot',
                'verbose_name_plural': 'Time Slots',
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('start_time', 'end_time', 'day_of_week', 'academic_year', 'term')},
            },
        ),
        migrations.CreateModel(
            name='TimetableEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text="Subject being taught (usually from teacher's current_subjects)", max_length=100)),
                ('room_number', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.CharField(default='2024-25', max_length=20)),
                ('term', models.CharField(default='Term 1', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(help_text='Classroom for this period', on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='classes.classroom')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_timetable_entries', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(help_text='Teacher assigned to this period', on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='teachers.teacher')),
                ('timeslot', models.ForeignKey(help_text='Time slot for this period', on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='timetable.timeslot')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_timetable_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timetable Entry',
                'verbose_name_plural': 'Timetable Entries',
                'ordering': ['timeslot__day_of_week', 'timeslot__start_time'],
                'unique_together': {('teacher', 'timeslot', 'academic_year', 'term')},
            },
        ),
        migrations.CreateModel(
            name='TimetableConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conflict_type', models.CharField(choices=[('teacher_double', 'Teacher Double Booking'), ('classroom_double', 'Classroom Double Booking'), ('teacher_classroom_mismatch', 'Teacher-Classroom Mismatch'), ('break_violation', 'Break Period Violation')], max_length=30)),
                ('description', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_timetable_conflicts', to=settings.AUTH_USER_MODEL)),
                ('entry1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_entry1', to='timetable.timetableentry')),
                ('entry2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_entry2', to='timetable.timetableentry')),
            ],
            options={
                'verbose_name': 'Timetable Conflict',
                'verbose_name_plural': 'Timetable Conflicts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimetablePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Week 1', 'Mid-term Schedule'", max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('academic_year', models.CharField(default='2024-25', max_length=20)),
                ('term', models.CharField(default='Term 1', max_length=20)),
                ('week_number', models.PositiveIntegerField(default=1)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_current', models.BooleanField(default=False, help_text='Mark as current active period')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_timetable_periods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timetable Period',
                'verbose_name_plural': 'Timetable Periods',
                'ordering': ['-is_current', 'academic_year', 'term', 'week_number'],
                'unique_together': {('academic_year', 'term', 'week_number')},
            },
        ),
    ]
