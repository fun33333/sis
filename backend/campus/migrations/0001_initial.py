# Generated by Django 5.2.7 on 2025-10-08 07:26

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('campus_id', models.CharField(editable=False, help_text='Auto-generated: CITY-YEAR-POSTAL-NO (e.g., KHI-16-75080-01)', max_length=50, unique=True)),
                ('campus_code', models.CharField(max_length=50, unique=True)),
                ('campus_name', models.CharField(max_length=255)),
                ('campus_type', models.CharField(choices=[('main', 'Main'), ('branch', 'Branch')], default='main', max_length=20)),
                ('governing_body', models.CharField(blank=True, max_length=255, null=True)),
                ('accreditation', models.CharField(blank=True, max_length=255, null=True)),
                ('instruction_language', models.CharField(help_text='e.g. English, Urdu', max_length=255)),
                ('academic_year_start', models.DateField()),
                ('academic_year_end', models.DateField()),
                ('established_year', models.PositiveIntegerField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('address_full', models.TextField()),
                ('postal_code', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=100)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('primary_phone', models.CharField(max_length=20)),
                ('secondary_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('official_email', models.EmailField(max_length=254)),
                ('campus_head_name', models.CharField(max_length=255)),
                ('campus_head_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('campus_head_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('total_staff_members', models.PositiveIntegerField(default=0)),
                ('total_teachers', models.PositiveIntegerField(default=0)),
                ('male_teachers', models.PositiveIntegerField(default=0)),
                ('female_teachers', models.PositiveIntegerField(default=0)),
                ('total_maids', models.PositiveIntegerField(default=0)),
                ('total_coordinators', models.PositiveIntegerField(default=0)),
                ('total_guards', models.PositiveIntegerField(default=0)),
                ('other_staff', models.PositiveIntegerField(default=0)),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('male_students', models.PositiveIntegerField(default=0)),
                ('female_students', models.PositiveIntegerField(default=0)),
                ('student_capacity', models.PositiveIntegerField(default=0)),
                ('morning_students', models.PositiveIntegerField(default=0)),
                ('afternoon_students', models.PositiveIntegerField(default=0)),
                ('avg_class_size', models.PositiveIntegerField(default=0)),
                ('shift_available', models.CharField(choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('both', 'Both')], default='morning', max_length=20)),
                ('grades_available', models.TextField(help_text='Comma separated e.g. Nursery, 1, 2, 3')),
                ('total_rooms', models.PositiveIntegerField(default=0, editable=False)),
                ('total_classrooms', models.PositiveIntegerField(default=0)),
                ('total_offices', models.PositiveIntegerField(default=0)),
                ('num_computer_labs', models.PositiveIntegerField(default=0)),
                ('num_science_labs', models.PositiveIntegerField(default=0)),
                ('library_available', models.BooleanField(default=False)),
                ('power_backup', models.BooleanField(default=False)),
                ('internet_available', models.BooleanField(default=False)),
                ('teacher_transport', models.BooleanField(default=False)),
                ('canteen_facility', models.BooleanField(default=False)),
                ('meal_program', models.BooleanField(default=False)),
                ('total_washrooms', models.PositiveIntegerField(default=0, editable=False)),
                ('staff_washrooms', models.PositiveIntegerField(default=0)),
                ('student_washrooms', models.PositiveIntegerField(default=0, editable=False)),
                ('male_staff_washrooms', models.PositiveIntegerField(default=0)),
                ('female_staff_washrooms', models.PositiveIntegerField(default=0)),
                ('male_student_washrooms', models.PositiveIntegerField(default=0)),
                ('female_student_washrooms', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('closed', 'Closed'), ('under_construction', 'Under Construction')], default='active', max_length=20)),
                ('sports_facility', models.BooleanField(default=False)),
                ('sports_available', models.TextField(blank=True, help_text='If available, list sports e.g. Cricket, Football, Swimming', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_draft', models.BooleanField(default=False, help_text='If True, campus is in draft mode')),
            ],
        ),
    ]
